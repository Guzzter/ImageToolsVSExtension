<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFFRuACip3Rcoqd0zJ6ncFCao3AIlptsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABRWbwAprN4vKKvdjiiq3XUoqd0eJqfbCCWm2wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAUVm8AKazeGCqs3nssrd7TLqzeniyq3VAoqNwSJabcAiSk2wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFVdvACuv3wIsr99FNLHh0EK25O9BtOPKL6vefSqo3SIlpdsIJKTbAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABVXbwArr98AK6/fFTOy4XhKu+bvYcPq/Ei35OM1reCiLKjdUyem
        3BIjpNsCIqLaAAAAAAAAAAAAAAAAADfB5xE2v+YRNL3lETK65BIus+BRSbzm1nDL7vxrx+3/Wr7p80Gy
        4swsqd1/KKbcIySj2gkjotoBAAAAAAAAAAA5wuekPMLnqD7B56o8vuaqObvkvU/C6OprzO/9WMPu/2LE
        7v9hwer9RbPj5DOr3qQqptxYJaTbEyGg2QMgntgAQsbp5F3Q7fZy2PH8btXx/GvS8Pxx0vD9etTz/27N
        8f9wy+//c8ru/2bC6/5Uueb0Oa3fzyak24IiodkjIaDZBEbJ6oxj1O/igeL2/2Xa9P9b0/L/Vs7x/2TP
        8v9yz/D/T8Do+ki75u9GuOXpP7Pi6S+r3uclpdvNI6PabiOj2hBAyOpCUc/sxn3g9f5p3PX/RtHy/z7L
        8P9TzfH/cNHw/0vA5+MzteKTLK/fWCmr3k8nqNxPJaXbTSOj2jMjo9oIPMjpHUrN7IBz3PP2eeH3/0zV
        9P9AzvH/Ts7x/3DU8v9nze7xSsDnpzm44zcxteEHKKvdASWl2wEjo9oAI6PaAD3J6gZEzOtAYdfw53/j
        9/5f2/X/RdLz/0TO8f9c0fL/dNTy/17J6+xCveWXNbjjJjC24gMAAAAAAAAAAAAAAAA9yuoAPsvrH1XT
        7rJ34PX4d+L3/1DY9P9I0vP/S8/y/2XT8v9z0vD/U8Xq5zm75YczueMXMbjjAQAAAAAAAAAAH2Z1AD/M
        6whJz+1oZNnx64bm9/564vb/dd72/3Lb9P932fT/gdnz/2rP7/5HwejiNLrkfTG44xUxuOMBAAAAAA8z
        OgAvmbAAQM3sL0jP7JxS0u7JUdHtzU/P7M1OzOzNTMrrzUrH6s1FxOjNOr7lzDO65LYxuONjMbjjCgAA
        AAAAAAAAIGd2AEDO7AtAzewoP8zrNz3K6jg8yOk4O8bpODnE6Dg4wec4Nr/mODS95TgzuuQ2MbjjIjG4
        4wMAAAAA//8AAO//AADz/wAA8f8AAPh/AAD4PwAAAA8AAAADAAAAAwAAgD8AAIA/AADAHwAAwA8AAOAP
        AADgBwAA//8AAA==
</value>
  </data>
</root>